{"version":3,"sources":["TeamEntry.js","AllTeams.js","AddTeam.js","EditTeam.js","ResultsDisplay.js","FinalResults.js","Results.js","Settings.js","index.js"],"names":["TeamEntry","props","teamValue","ballValue","ownerValue","editTeam","index","swapTeams","react_default","a","createElement","onClick","AllTeams","completeTable","teams","forEach","team","i","push","src_TeamEntry","name","balls","owner","key","AddTeam","window","scrollTo","closeModal","addTeam","_useState","useState","_useState2","Object","slicedToArray","setOwner","_useState3","_useState4","teamName","setTeamName","_useState5","_useState6","setBalls","className","style","display","htmlFor","id","onChange","e","target","value","parseInt","isNaN","EditTeam","startingValues","ResultsDisplay","displayIndex","expectedOrder","map","actualOrder","winners","htmlOrder","htmlResults","htmlFinalFour","finalFour","length","teamToAdd","sort","Math","random","winner","FinalResults","Results","waitTime","pickedTeams","setDisplayIndex","useEffect","setTimeout","nextIndex","src_FinalResults","slice","src_ResultsDisplay","Settings","updateSettings","setWaitTime","numberOfWinners","setNumberOfWinners","ls","require","ReactDOM","render","wffl","pTeams","get","pWaitTime","pNumberOfWinners","runLottery","setRunLottery","setTeams","showAddTeamModal","setShowAddTeamModal","_useState7","_useState8","showEditTeamModal","setShowEditTeamModal","_useState9","_useState10","showSettingsModal","setShowSettingsModal","_useState11","_useState12","editTeamIndex","setEditTeamIndex","_useState13","_useState14","results","setResults","_useState15","_useState16","_useState17","_useState18","getWinner","oddsArr","prevWinners","winningNum","floor","src_Results","reverse","type","alert","set","order","winnerOrder","unshift","teamArr","Array","fill","concat","_loop","filter","console","log","calculateResults","src_AllTeams","j","teamsCopy","toConsumableArray","temp","lib_default","isOpen","contentLabel","overlayClassName","src_AddTeam","src_EditTeam","src_Settings","document","querySelector"],"mappings":"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","file":"static/js/main.ca6712f6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TeamEntry(props) {\r\n\r\n        let teamValue = props.teamValue;\r\n        let ballValue = props.ballValue;\r\n        let ownerValue = props.ownerValue;\r\n        let editTeam = props.editTeam;\r\n        let index = props.index;\r\n        let swapTeams = props.swapTeams;\r\n\r\n        return (\r\n            <tr>\r\n                <td> {ownerValue} </td>\r\n                <td> {teamValue} </td>\r\n                <td> {ballValue} </td>\r\n                <td>\r\n                    <button onClick={() => swapTeams(index, index-1)}>&#8593;</button>\r\n                    <button onClick={() => swapTeams(index, index+1)}>&#8595;</button>\r\n                    <button onClick={() => editTeam(index)}>E</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n}\r\n\r\nexport default TeamEntry;","import React from 'react'\r\nimport TeamEntry from \"./TeamEntry\";\r\n\r\nfunction AllTeams(props) {\r\n\r\n    let completeTable = [];\r\n    let teams = props.teams;\r\n    let editTeam = props.editTeam;\r\n    let swapTeams = props.swapTeams;\r\n\r\n    teams.forEach(\r\n        (team, i) => {\r\n            completeTable.push(<TeamEntry teamValue={team.name} ballValue={team.balls} ownerValue={team.owner} key={i} index={i} editTeam={editTeam} swapTeams={swapTeams}/>);\r\n        });\r\n\r\n    return (\r\n    <tbody>\r\n        <tr>\r\n            <th>Owner</th>\r\n            <th>Team Name</th>\r\n            <th>Ping Pong Balls</th>\r\n            <th>Actions</th>\r\n        </tr>\r\n        {completeTable} \r\n    </tbody>)\r\n}\r\n\r\nexport default AllTeams;\r\n","import React, { useState } from 'react'\r\n\r\nfunction AddTeam(props) {\r\n\r\n    window.scrollTo(0,0);\r\n\r\n    let closeModal = props.closeModal;\r\n    let addTeam = props.addTeam;\r\n\r\n    const [owner, setOwner] = useState(\"\");\r\n    const [teamName, setTeamName] = useState(\"\");\r\n    const [balls, setBalls] = useState(0);\r\n\r\n    let handleBallsChange = function(e) {\r\n        let value = parseInt(e.target.value);\r\n        if(e.target.value === \"\") {\r\n            setBalls(\"\");\r\n        }\r\n        else if(!isNaN(value))\r\n        {\r\n            setBalls(value);\r\n        }\r\n    }\r\n\r\n    let handleSubmit = function() {\r\n        addTeam({name: teamName, balls: balls === \"\" ? 0 : balls, owner: owner});\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"modalTitle\" style={{display: \"block\"}}>Add Team</h2>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"owner\">Owner:</label>\r\n                    <input id=\"owner\" className=\"form-control\" onChange={(e) => setOwner(e.target.value)} value={owner}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"teamName\">Team Name:</label>\r\n                    <input id=\"teamName\" className=\"form-control\" onChange={(e) => setTeamName(e.target.value)} value={teamName}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"pingPongBalls\">Ping Pong Balls:</label>\r\n                    <input id=\"pingPongBalls\" className=\"form-control\" onChange={handleBallsChange} value={balls}/>\r\n                </div>\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n                <button onClick={closeModal} className=\"btn btn-danger\">Cancel</button>\r\n            </form>\r\n        </div>\r\n    )\r\n        \r\n}\r\n\r\nexport default AddTeam;","import React, { useState } from 'react'\r\n\r\nfunction EditTeam(props) {\r\n\r\n    window.scrollTo(0,0);\r\n\r\n    let closeModal = props.closeModal;\r\n    let editTeam = props.editTeam;\r\n    let startingValues = props.startingValues;\r\n\r\n    const [owner, setOwner] = useState(startingValues.owner);\r\n    const [teamName, setTeamName] = useState(startingValues.name);\r\n    const [balls, setBalls] = useState(startingValues.balls);\r\n\r\n    let handleBallsChange = function(e) {\r\n        let value = parseInt(e.target.value);\r\n        if(e.target.value === \"\") {\r\n            setBalls(\"\");\r\n        }\r\n        else if(!isNaN(value))\r\n        {\r\n            setBalls(value);\r\n        }\r\n    }\r\n\r\n    let handleSubmit = function() {\r\n        editTeam({name: teamName, balls: balls === \"\" ? 0 : balls, owner: owner});\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"modalTitle\" style={{display: \"block\"}}>Edit Team</h2>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"owner\">Owner:</label>\r\n                    <input id=\"owner\" className=\"form-control\" onChange={(e) => setOwner(e.target.value)} value={owner}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"teamName\">Team Name:</label>\r\n                    <input id=\"teamName\" className=\"form-control\" onChange={(e) => setTeamName(e.target.value)} value={teamName}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"pingPongBalls\">Ping Pong Balls:</label>\r\n                    <input id=\"pingPongBalls\" className=\"form-control\" onChange={handleBallsChange} value={balls}/>\r\n                </div>\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n                <button onClick={closeModal} className=\"btn btn-danger\">Cancel</button>\r\n            </form>\r\n        </div>\r\n    )\r\n        \r\n}\r\n\r\nexport default EditTeam;","import React from 'react';\r\n\r\nfunction ResultsDisplay(props) {\r\n    let displayIndex = props.displayIndex;\r\n    let expectedOrder = props.expectedOrder.map(team => team.name);\r\n    let actualOrder = props.actualOrder;\r\n    let winners = props.winners;\r\n\r\n    let htmlOrder = [];\r\n    let htmlResults = [];\r\n    let htmlFinalFour = [];\r\n    let finalFour = {};\r\n\r\n    let shuffle = function(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n      }\r\n\r\n\r\n    expectedOrder.forEach((team, index) => {\r\n        htmlOrder.push(<p key={index}>{(expectedOrder.length - index) + \". \" + team}</p>)\r\n    });\r\n\r\n    for(let i = 0; i <= displayIndex; i++)\r\n    {\r\n        htmlResults.push(<p key={i}>{(actualOrder.length - i) + \". \" + actualOrder[i]}</p>)\r\n\r\n        while(expectedOrder[i+htmlFinalFour.length] !== actualOrder[i])\r\n        {\r\n            let teamToAdd = expectedOrder[i+htmlFinalFour.length];\r\n            htmlFinalFour.push(<p key={htmlFinalFour.length}>{teamToAdd}</p>)\r\n            finalFour[teamToAdd] = true;\r\n        }\r\n    }\r\n\r\n    if(winners) {\r\n        shuffle(winners);\r\n        winners.forEach(winner => {\r\n            if(!(winner in finalFour))\r\n            {\r\n                htmlFinalFour.push(<p key={htmlFinalFour.length}>{winner}</p>)\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div id=\"lotteryView\">\r\n            <div id=\"lotteryResults\">\r\n                <div id=\"order\">\r\n                    <h3>Expected Order: </h3>\r\n                    {htmlOrder}\r\n                </div>\r\n                <div id=\"results\">\r\n                    <h3>Results: </h3>\r\n                    {htmlResults}\r\n                </div>\r\n                <div id=\"winners\">\r\n                    <h3>Winners: </h3>\r\n                    {htmlFinalFour}\r\n                </div>\r\n            </div>\r\n            <h2>{\"Next Expected Team: \" + expectedOrder[displayIndex+htmlFinalFour.length+1]}</h2>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ResultsDisplay;","import React from 'react';\r\n\r\nfunction FinalResults(props) {\r\n    let actualOrder = props.actualOrder; \r\n    let displayIndex = props.displayIndex;\r\n\r\n    let htmlResults = [];\r\n\r\n    for(let i = 0; i < displayIndex; i++)\r\n    {\r\n        htmlResults.push(<h3>{actualOrder.length - i + \". \" + actualOrder[i]}</h3>);\r\n    }\r\n\r\n    return (\r\n        <div id=\"finalResults\">\r\n            {htmlResults}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinalResults;","import React, { useState, useEffect } from 'react';\r\nimport ResultsDisplay from './ResultsDisplay';\r\nimport FinalResults from './FinalResults';\r\n\r\nfunction Results(props) {\r\n    let expectedOrder = props.expectedOrder;\r\n    let actualOrder = props.actualOrder;\r\n    let waitTime = props.waitTime;\r\n    let pickedTeams = props.pickedTeams;\r\n\r\n    const [displayIndex, setDisplayIndex] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        if(displayIndex < expectedOrder.length) {\r\n            setTimeout(nextIndex, waitTime);\r\n        }\r\n    })\r\n\r\n    let  nextIndex = function() {\r\n        setDisplayIndex(displayIndex + 1);\r\n    }\r\n\r\n    if(displayIndex + 1 > expectedOrder.length - pickedTeams)\r\n    {\r\n        return <FinalResults actualOrder={actualOrder} displayIndex={displayIndex}></FinalResults>\r\n    }\r\n    else if(displayIndex + 1 === expectedOrder.length - pickedTeams)\r\n    {\r\n        let winners = actualOrder.slice(actualOrder.length - pickedTeams);\r\n        return <ResultsDisplay expectedOrder={expectedOrder} actualOrder={actualOrder} displayIndex={displayIndex} winners={winners}></ResultsDisplay>\r\n    }\r\n    else\r\n    {\r\n        return <ResultsDisplay expectedOrder={expectedOrder} actualOrder={actualOrder} displayIndex={displayIndex}></ResultsDisplay>\r\n    }\r\n\r\n}\r\n\r\nexport default Results;","import React, { useState } from 'react'\r\n\r\nfunction Settings(props) {\r\n\r\n    window.scrollTo(0,0);\r\n\r\n    let updateSettings = props.updateSettings;\r\n    let closeModal = props.closeModal;\r\n\r\n    const [waitTime, setWaitTime] = useState(props.waitTime);\r\n    const [numberOfWinners, setNumberOfWinners] = useState(props.numberOfWinners);\r\n\r\n    let handleTimeChange = function(e) {\r\n        let value = parseInt(e.target.value);\r\n        if(e.target.value === \"\") {\r\n            setWaitTime(\"\");\r\n        }\r\n        else if(!isNaN(value))\r\n        {\r\n            setWaitTime(value);\r\n        }\r\n    }\r\n\r\n    let handleWinnerChange = function(e) {\r\n        let value = parseInt(e.target.value);\r\n        if(e.target.value === \"\") {\r\n            setNumberOfWinners(\"\");\r\n        }\r\n        else if(!isNaN(value))\r\n        {\r\n            setNumberOfWinners(value);\r\n        }\r\n    }\r\n\r\n    let handleSubmit = function() {\r\n        updateSettings(waitTime === \"\" || waitTime < 0 ? 3000 : waitTime, numberOfWinners === \"\" || numberOfWinners < 1 ? 4 : numberOfWinners);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"modalTitle\" style={{display: \"block\"}}>Edit Team</h2>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"numberOfWinners\">Number of Teams Selected:</label>\r\n                    <input id=\"numberOfWinners\" className=\"form-control\" onChange={handleWinnerChange} value={numberOfWinners}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"waitTime\">Time Between Result Update:</label>\r\n                    <input id=\"waitTime\" className=\"form-control\" onChange={handleTimeChange} value={waitTime}/>\r\n                </div>\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n                <button onClick={closeModal} className=\"btn btn-danger\">Cancel</button>\r\n            </form>\r\n        </div>\r\n    )\r\n        \r\n}\r\n\r\nexport default Settings;","import React, {useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport AllTeams from './AllTeams';\r\nimport AddTeam from './AddTeam';\r\nimport EditTeam from './EditTeam'\r\nimport ReactModal from 'react-modal';\r\nimport Results from './Results';\r\nimport Settings from './Settings';\r\n\r\nvar ls = require('local-storage');\r\n\r\nfunction App() {\r\n\r\n    const wffl = [\r\n        {name: \"Team BEST\", balls: 140, owner: \"Richard Brunje\"},\r\n        {name: \"Tombradykisses Hissononthelips\", balls: 140, owner: \"Maxwell Bellias\"},\r\n        {name: \"Team Zargon\", balls: 140, owner: \"Jonathan Schwarz\"},\r\n        {name: \"Owning The Libs\", balls: 125, owner: \"Matt Shaffer\"},\r\n        {name: \"The Swash Knucklers\", balls: 105, owner: \"Robert Papa\"},\r\n        {name: \"Pork Wins '96 '97\", balls: 90, owner: \"Sebastian Hull\"},\r\n        {name: \"Spare Me Lafleur\", balls: 75, owner: \"David Droxjock\"},\r\n        {name: \"Team gil gil boy\", balls: 60, owner: \"Alec Doyle\"},\r\n        {name: \"Team Fuck Fantasy Footbal\", balls: 45, owner: \"Jake Anderson\"},\r\n        {name: \"Team Ligma\", balls: 30, owner: \"Billy Crank\"},\r\n        {name: \"Dirty Sprite\", balls: 20, owner: \"Adam Brody, David Padover\"},\r\n        {name: \"Schrute Farms\", balls: 15, owner: \"Brandon Davis, Frank Gaccione\"}\r\n    ];\r\n\r\n        let pTeams = ls.get(\"teams\");\r\n        if(!pTeams) pTeams = [];\r\n\r\n        let pWaitTime = ls.get(\"waitTime\");\r\n        if(!pWaitTime) pWaitTime = 3000;\r\n\r\n        let pNumberOfWinners = ls.get(\"numberOfWinners\");\r\n        if(!pNumberOfWinners) pNumberOfWinners = 4;\r\n\r\n    const [runLottery, setRunLottery] = useState(false);\r\n    const [teams, setTeams] = useState(pTeams);\r\n    const [showAddTeamModal, setShowAddTeamModal] = useState(false);\r\n    const [showEditTeamModal, setShowEditTeamModal] = useState(false);\r\n    const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n    const [editTeamIndex, setEditTeamIndex] = useState(0);\r\n    const [results, setResults] = useState([]);\r\n    const [waitTime, setWaitTime] = useState(pWaitTime);\r\n    const [numberOfWinners, setNumberOfWinners] = useState(pNumberOfWinners);\r\n\r\n    let calculateResults= function() {\r\n\r\n        if(numberOfWinners + 2 >= teams + 2) {\r\n            alert(\"Add more teams I think this thing will break if you don't\");\r\n            return;\r\n        }\r\n\r\n        ls.set(\"teams\", teams);\r\n        ls.set(\"waitTime\", waitTime);\r\n        ls.set(\"numberOfWinners\", numberOfWinners);\r\n\r\n\r\n        let oddsArr = [];\r\n        let order = [];\r\n        let winners = {};\r\n        let winnerOrder = [];\r\n\r\n        teams.forEach(\r\n            team => {\r\n                order.unshift(team.name);\r\n                let teamArr = new Array(team.balls).fill(team.name);\r\n                oddsArr = oddsArr.concat(teamArr);\r\n            });\r\n\r\n        for(let i = 0; i < numberOfWinners; i++) {\r\n            let winner = getWinner(oddsArr, winners);\r\n            winners[winner] = winner;\r\n            order = order.filter(team => team !== winner);\r\n            winnerOrder.unshift(winner);\r\n        }\r\n\r\n        order = order.concat(winnerOrder);\r\n\r\n        console.log(order);\r\n        \r\n        setRunLottery(true);\r\n        setResults(order);\r\n    }\r\n\r\n    let getWinner = function(oddsArr, prevWinners) {\r\n        while(true) {\r\n            let winningNum = Math.floor(Math.random() * oddsArr.length)\r\n            if(!(oddsArr[winningNum] in prevWinners)) {\r\n                return oddsArr[winningNum];\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    let updateTeam = function(team) {\r\n        teams[editTeamIndex] = team;\r\n        setTeams(teams);\r\n    }\r\n\r\n    let editTeam = function(index)\r\n    {\r\n        setEditTeamIndex(index);\r\n        setShowEditTeamModal(true);\r\n    }\r\n\r\n    let swapTeams = function(i, j)\r\n    {\r\n        if(i < 0 || i > teams.length-1 || j < 0 || j > teams.length-1) return;\r\n\r\n        let teamsCopy = [...teams];\r\n\r\n        let temp = teamsCopy[i];\r\n        teamsCopy[i] = teamsCopy[j];\r\n        teamsCopy[j] = temp;\r\n        setTeams(teamsCopy);\r\n    }\r\n\r\n    let updateSettings = function(waitTime, numberOfWinners) {\r\n        setNumberOfWinners(numberOfWinners);\r\n        setWaitTime(waitTime);\r\n    }\r\n\r\n    if(!runLottery)\r\n    {\r\n        return (\r\n            <div id=\"Everything\">\r\n                <h1>Draft Lottery 2019</h1>\r\n                <div id=\"menuButtons\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" onClick={() => calculateResults()}>Run</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => setShowSettingsModal(true)}>Settings</button>\r\n                    <button className=\"btn btn-info\" onClick={() => setTeams(wffl)}>Load WFFL Data</button>\r\n                </div>\r\n                <table className=\"table table-sm table-hover table-striped table-bordered\">\r\n                    <AllTeams teams={teams} editTeam={editTeam} swapTeams={swapTeams}/>\r\n                </table>\r\n                <div id=\"addButton\">\r\n                    <button className=\"btn btn-success\" onClick={() => setShowAddTeamModal(true)}>Add Team</button>\r\n                </div>\r\n                <ReactModal isOpen={showAddTeamModal} contentLabel=\"Add Team\" className=\"Modal\" overlayClassName=\"Overlay\">\r\n                    <AddTeam closeModal={() => setShowAddTeamModal(false)} addTeam={(team) => setTeams([...teams, team])}/>\r\n                </ReactModal>\r\n                <ReactModal isOpen={showEditTeamModal} contentLabel=\"Edit Team\" className=\"Modal\" overlayClassName=\"Overlay\">\r\n                    <EditTeam closeModal={() => setShowEditTeamModal(false)} editTeam={updateTeam} startingValues={teams[editTeamIndex]}/>\r\n                </ReactModal>\r\n                <ReactModal isOpen={showSettingsModal} contentLabel=\"Settings\" className=\"Modal\" overlayClassName=\"Overlay\">\r\n                    <Settings closeModal={() => setShowSettingsModal(false)} waitTime={waitTime} numberOfWinners={numberOfWinners} updateSettings={updateSettings}/>\r\n                </ReactModal>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return <Results expectedOrder={teams.reverse()} actualOrder={results} waitTime={waitTime} pickedTeams={numberOfWinners}></Results>;\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}