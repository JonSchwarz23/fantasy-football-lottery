{"version":3,"sources":["TeamEntry.js","AllTeams.js","AddTeam.js","EditTeam.js","ResultsDisplay.js","FinalResults.js","Results.js","Settings.js","index.js"],"names":["TeamEntry","props","teamValue","ballValue","ownerValue","editTeam","index","swapTeams","react_default","a","createElement","onClick","AllTeams","completeTable","teams","forEach","team","i","push","src_TeamEntry","name","balls","owner","key","AddTeam","window","scrollTo","closeModal","addTeam","_useState","useState","_useState2","Object","slicedToArray","setOwner","_useState3","_useState4","teamName","setTeamName","_useState5","_useState6","setBalls","className","style","display","htmlFor","id","onChange","e","target","value","parseInt","isNaN","EditTeam","startingValues","ResultsDisplay","displayIndex","expectedOrder","map","actualOrder","winners","htmlOrder","htmlResults","htmlFinalFour","finalFour","length","teamToAdd","sort","Math","random","winner","FinalResults","Results","waitTime","pickedTeams","setDisplayIndex","useEffect","setTimeout","nextIndex","src_FinalResults","slice","src_ResultsDisplay","Settings","updateSettings","setWaitTime","numberOfWinners","setNumberOfWinners","ls","require","ReactDOM","render","wffl","pTeams","get","pWaitTime","pNumberOfWinners","runLottery","setRunLottery","setTeams","showAddTeamModal","setShowAddTeamModal","_useState7","_useState8","showEditTeamModal","setShowEditTeamModal","_useState9","_useState10","showSettingsModal","setShowSettingsModal","_useState11","_useState12","editTeamIndex","setEditTeamIndex","_useState13","_useState14","results","setResults","_useState15","_useState16","_useState17","_useState18","getWinner","oddsArr","prevWinners","winningNum","floor","src_Results","reverse","type","alert","set","order","winnerOrder","unshift","teamArr","Array","fill","concat","_loop","filter","console","log","calculateResults","src_AllTeams","j","teamsCopy","toConsumableArray","temp","lib_default","isOpen","contentLabel","overlayClassName","src_AddTeam","src_EditTeam","src_Settings","document","querySelector"],"mappings":"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","file":"static/js/main.1198f4c7.chunk.js","sourcesContent":["import React from 'react'\n\nfunction TeamEntry(props) {\n\n        let teamValue = props.teamValue;\n        let ballValue = props.ballValue;\n        let ownerValue = props.ownerValue;\n        let editTeam = props.editTeam;\n        let index = props.index;\n        let swapTeams = props.swapTeams;\n\n        return (\n            <tr>\n                <td> {ownerValue} </td>\n                <td> {teamValue} </td>\n                <td> {ballValue} </td>\n                <td>\n                    <button onClick={() => swapTeams(index, index-1)}>&#8593;</button>\n                    <button onClick={() => swapTeams(index, index+1)}>&#8595;</button>\n                    <button onClick={() => editTeam(index)}>E</button>\n                </td>\n            </tr>\n        );\n}\n\nexport default TeamEntry;","import React from 'react'\nimport TeamEntry from \"./TeamEntry\";\n\nfunction AllTeams(props) {\n\n    let completeTable = [];\n    let teams = props.teams;\n    let editTeam = props.editTeam;\n    let swapTeams = props.swapTeams;\n\n    teams.forEach(\n        (team, i) => {\n            completeTable.push(<TeamEntry teamValue={team.name} ballValue={team.balls} ownerValue={team.owner} key={i} index={i} editTeam={editTeam} swapTeams={swapTeams}/>);\n        });\n\n    return (\n    <tbody>\n        <tr>\n            <th>Owner</th>\n            <th>Team Name</th>\n            <th>Ping Pong Balls</th>\n            <th>Actions</th>\n        </tr>\n        {completeTable} \n    </tbody>)\n}\n\nexport default AllTeams;\n","import React, { useState } from 'react'\n\nfunction AddTeam(props) {\n\n    window.scrollTo(0,0);\n\n    let closeModal = props.closeModal;\n    let addTeam = props.addTeam;\n\n    const [owner, setOwner] = useState(\"\");\n    const [teamName, setTeamName] = useState(\"\");\n    const [balls, setBalls] = useState(0);\n\n    let handleBallsChange = function(e) {\n        let value = parseInt(e.target.value);\n        if(e.target.value === \"\") {\n            setBalls(\"\");\n        }\n        else if(!isNaN(value))\n        {\n            setBalls(value);\n        }\n    }\n\n    let handleSubmit = function() {\n        addTeam({name: teamName, balls: balls === \"\" ? 0 : balls, owner: owner});\n        closeModal();\n    }\n\n    return (\n        <div>\n            <h2 className=\"modalTitle\" style={{display: \"block\"}}>Add Team</h2>\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"owner\">Owner:</label>\n                    <input id=\"owner\" className=\"form-control\" onChange={(e) => setOwner(e.target.value)} value={owner}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"teamName\">Team Name:</label>\n                    <input id=\"teamName\" className=\"form-control\" onChange={(e) => setTeamName(e.target.value)} value={teamName}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"pingPongBalls\">Ping Pong Balls:</label>\n                    <input id=\"pingPongBalls\" className=\"form-control\" onChange={handleBallsChange} value={balls}/>\n                </div>\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n                <button onClick={closeModal} className=\"btn btn-danger\">Cancel</button>\n            </form>\n        </div>\n    )\n        \n}\n\nexport default AddTeam;","import React, { useState } from 'react'\n\nfunction EditTeam(props) {\n\n    window.scrollTo(0,0);\n\n    let closeModal = props.closeModal;\n    let editTeam = props.editTeam;\n    let startingValues = props.startingValues;\n\n    const [owner, setOwner] = useState(startingValues.owner);\n    const [teamName, setTeamName] = useState(startingValues.name);\n    const [balls, setBalls] = useState(startingValues.balls);\n\n    let handleBallsChange = function(e) {\n        let value = parseInt(e.target.value);\n        if(e.target.value === \"\") {\n            setBalls(\"\");\n        }\n        else if(!isNaN(value))\n        {\n            setBalls(value);\n        }\n    }\n\n    let handleSubmit = function() {\n        editTeam({name: teamName, balls: balls === \"\" ? 0 : balls, owner: owner});\n        closeModal();\n    }\n\n    return (\n        <div>\n            <h2 className=\"modalTitle\" style={{display: \"block\"}}>Edit Team</h2>\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"owner\">Owner:</label>\n                    <input id=\"owner\" className=\"form-control\" onChange={(e) => setOwner(e.target.value)} value={owner}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"teamName\">Team Name:</label>\n                    <input id=\"teamName\" className=\"form-control\" onChange={(e) => setTeamName(e.target.value)} value={teamName}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"pingPongBalls\">Ping Pong Balls:</label>\n                    <input id=\"pingPongBalls\" className=\"form-control\" onChange={handleBallsChange} value={balls}/>\n                </div>\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n                <button onClick={closeModal} className=\"btn btn-danger\">Cancel</button>\n            </form>\n        </div>\n    )\n        \n}\n\nexport default EditTeam;","import React from \"react\";\n\nfunction ResultsDisplay(props) {\n  let displayIndex = props.displayIndex;\n  let expectedOrder = props.expectedOrder.map((team) => team.name);\n  let actualOrder = props.actualOrder;\n  let winners = props.winners;\n\n  let htmlOrder = [];\n  let htmlResults = [];\n  let htmlFinalFour = [];\n  let finalFour = {};\n\n  let shuffle = function (array) {\n    array.sort(() => Math.random() - 0.5);\n  };\n\n  expectedOrder.forEach((team, index) => {\n    htmlOrder.push(\n      <p key={index}>{expectedOrder.length - index + \". \" + team}</p>\n    );\n  });\n\n  for (let i = 0; i <= displayIndex; i++) {\n    htmlResults.push(\n      <p key={i}>{actualOrder.length - i + \". \" + actualOrder[i]}</p>\n    );\n\n    while (expectedOrder[i + htmlFinalFour.length] !== actualOrder[i]) {\n      let teamToAdd = expectedOrder[i + htmlFinalFour.length];\n      htmlFinalFour.push(<p key={htmlFinalFour.length}>{teamToAdd}</p>);\n      finalFour[teamToAdd] = true;\n    }\n  }\n\n  if (winners) {\n    shuffle(winners);\n    winners.forEach((winner) => {\n      if (!(winner in finalFour)) {\n        htmlFinalFour.push(<p key={htmlFinalFour.length}>{winner}</p>);\n      }\n    });\n  }\n\n  return (\n    <div id=\"lotteryView\">\n      <div id=\"lotteryResults\">\n        <div id=\"order\">\n          <h3>Expected Order: </h3>\n          {htmlOrder}\n        </div>\n        <div id=\"results\">\n          <h3>Results: </h3>\n          {htmlResults}\n        </div>\n        <div id=\"winners\">\n          <h3>Winners: </h3>\n          {htmlFinalFour}\n        </div>\n      </div>\n      <h2>\n        {\"Next Expected Team: \" +\n          expectedOrder[displayIndex + htmlFinalFour.length + 1]}\n      </h2>\n    </div>\n  );\n}\n\nexport default ResultsDisplay;\n","import React from 'react';\n\nfunction FinalResults(props) {\n    let actualOrder = props.actualOrder; \n    let displayIndex = props.displayIndex;\n\n    let htmlResults = [];\n\n    for(let i = 0; i < displayIndex; i++)\n    {\n        htmlResults.push(<h3>{actualOrder.length - i + \". \" + actualOrder[i]}</h3>);\n    }\n\n    return (\n        <div id=\"finalResults\">\n            {htmlResults}\n        </div>\n    )\n}\n\nexport default FinalResults;","import React, { useState, useEffect } from 'react';\nimport ResultsDisplay from './ResultsDisplay';\nimport FinalResults from './FinalResults';\n\nfunction Results(props) {\n    let expectedOrder = props.expectedOrder;\n    let actualOrder = props.actualOrder;\n    let waitTime = props.waitTime;\n    let pickedTeams = props.pickedTeams;\n\n    const [displayIndex, setDisplayIndex] = useState(-1);\n\n    useEffect(() => {\n\n        if(displayIndex < expectedOrder.length) {\n            setTimeout(nextIndex, waitTime);\n        }\n    })\n\n    let  nextIndex = function() {\n        setDisplayIndex(displayIndex + 1);\n    }\n\n    if(displayIndex + 1 > expectedOrder.length - pickedTeams)\n    {\n        return <FinalResults actualOrder={actualOrder} displayIndex={displayIndex}></FinalResults>\n    }\n    else if(displayIndex + 1 === expectedOrder.length - pickedTeams)\n    {\n        let winners = actualOrder.slice(actualOrder.length - pickedTeams);\n        return <ResultsDisplay expectedOrder={expectedOrder} actualOrder={actualOrder} displayIndex={displayIndex} winners={winners}></ResultsDisplay>\n    }\n    else\n    {\n        return <ResultsDisplay expectedOrder={expectedOrder} actualOrder={actualOrder} displayIndex={displayIndex}></ResultsDisplay>\n    }\n\n}\n\nexport default Results;","import React, { useState } from 'react'\n\nfunction Settings(props) {\n\n    window.scrollTo(0,0);\n\n    let updateSettings = props.updateSettings;\n    let closeModal = props.closeModal;\n\n    const [waitTime, setWaitTime] = useState(props.waitTime);\n    const [numberOfWinners, setNumberOfWinners] = useState(props.numberOfWinners);\n\n    let handleTimeChange = function(e) {\n        let value = parseInt(e.target.value);\n        if(e.target.value === \"\") {\n            setWaitTime(\"\");\n        }\n        else if(!isNaN(value))\n        {\n            setWaitTime(value);\n        }\n    }\n\n    let handleWinnerChange = function(e) {\n        let value = parseInt(e.target.value);\n        if(e.target.value === \"\") {\n            setNumberOfWinners(\"\");\n        }\n        else if(!isNaN(value))\n        {\n            setNumberOfWinners(value);\n        }\n    }\n\n    let handleSubmit = function() {\n        updateSettings(waitTime === \"\" || waitTime < 0 ? 3000 : waitTime, numberOfWinners === \"\" || numberOfWinners < 1 ? 4 : numberOfWinners);\n        closeModal();\n    }\n\n    return (\n        <div>\n            <h2 className=\"modalTitle\" style={{display: \"block\"}}>Settings</h2>\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"numberOfWinners\">Number of Teams Selected:</label>\n                    <input id=\"numberOfWinners\" className=\"form-control\" onChange={handleWinnerChange} value={numberOfWinners}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"waitTime\">Time Between Result Update:</label>\n                    <input id=\"waitTime\" className=\"form-control\" onChange={handleTimeChange} value={waitTime}/>\n                </div>\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n                <button onClick={closeModal} className=\"btn btn-danger\">Cancel</button>\n            </form>\n        </div>\n    )\n        \n}\n\nexport default Settings;","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AllTeams from \"./AllTeams\";\nimport AddTeam from \"./AddTeam\";\nimport EditTeam from \"./EditTeam\";\nimport ReactModal from \"react-modal\";\nimport Results from \"./Results\";\nimport Settings from \"./Settings\";\n\nvar ls = require(\"local-storage\");\n\nfunction App() {\n  const wffl = [\n    { name: \"Team gil gil boy\", balls: 140, owner: \"Alec Doyle\" },\n    { name: \"Spare Me Lafleur\", balls: 140, owner: \"David Drozjock\" },\n    { name: \"Team Pokemon\", balls: 140, owner: \"Adam Brody, David Padover\" },\n    { name: \"Sumn Sweet\", balls: 125, owner: \"Sebastian Hull\" },\n    {\n      name: \"Tom Brady TBD\",\n      balls: 105,\n      owner: \"Maxwell Bellias\",\n    },\n    { name: \"Shemdawg Millionaire\", balls: 90, owner: \"Jake Anderson\" },\n    { name: \"Team Zargon\", balls: 75, owner: \"Jonathan Schwarz\" },\n    { name: \"Fat Ducks\", balls: 60, owner: \"Robert Papa\" },\n    { name: \"Bones Are Their Money\", balls: 45, owner: \"Matt Shaffer\" },\n    { name: \"Team BEST\", balls: 30, owner: \"Richard Brunje\" },\n    {\n      name: \"Schrute Farms\",\n      balls: 20,\n      owner: \"Brandon Davis, Frank Gaccione\",\n    },\n    { name: \"Team Ligma\", balls: 15, owner: \"Billy Crank\" },\n  ];\n\n  let pTeams = ls.get(\"teams\");\n  if (!pTeams) pTeams = [];\n\n  let pWaitTime = ls.get(\"waitTime\");\n  if (!pWaitTime) pWaitTime = 3000;\n\n  let pNumberOfWinners = ls.get(\"numberOfWinners\");\n  if (!pNumberOfWinners) pNumberOfWinners = 4;\n\n  const [runLottery, setRunLottery] = useState(false);\n  const [teams, setTeams] = useState(pTeams);\n  const [showAddTeamModal, setShowAddTeamModal] = useState(false);\n  const [showEditTeamModal, setShowEditTeamModal] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [editTeamIndex, setEditTeamIndex] = useState(0);\n  const [results, setResults] = useState([]);\n  const [waitTime, setWaitTime] = useState(pWaitTime);\n  const [numberOfWinners, setNumberOfWinners] = useState(pNumberOfWinners);\n\n  let calculateResults = function () {\n    if (numberOfWinners + 2 >= teams + 2) {\n      alert(\"Add more teams I think this thing will break if you don't\");\n      return;\n    }\n\n    ls.set(\"teams\", teams);\n    ls.set(\"waitTime\", waitTime);\n    ls.set(\"numberOfWinners\", numberOfWinners);\n\n    let oddsArr = [];\n    let order = [];\n    let winners = {};\n    let winnerOrder = [];\n\n    teams.forEach((team) => {\n      order.unshift(team.name);\n      let teamArr = new Array(team.balls).fill(team.name);\n      oddsArr = oddsArr.concat(teamArr);\n    });\n\n    for (let i = 0; i < numberOfWinners; i++) {\n      let winner = getWinner(oddsArr, winners);\n      winners[winner] = winner;\n      order = order.filter((team) => team !== winner);\n      winnerOrder.unshift(winner);\n    }\n\n    order = order.concat(winnerOrder);\n\n    console.log(order);\n\n    setRunLottery(true);\n    setResults(order);\n  };\n\n  let getWinner = function (oddsArr, prevWinners) {\n    while (true) {\n      let winningNum = Math.floor(Math.random() * oddsArr.length);\n      if (!(oddsArr[winningNum] in prevWinners)) {\n        return oddsArr[winningNum];\n      }\n    }\n  };\n\n  let updateTeam = function (team) {\n    teams[editTeamIndex] = team;\n    setTeams(teams);\n  };\n\n  let editTeam = function (index) {\n    setEditTeamIndex(index);\n    setShowEditTeamModal(true);\n  };\n\n  let swapTeams = function (i, j) {\n    if (i < 0 || i > teams.length - 1 || j < 0 || j > teams.length - 1) return;\n\n    let teamsCopy = [...teams];\n\n    let temp = teamsCopy[i];\n    teamsCopy[i] = teamsCopy[j];\n    teamsCopy[j] = temp;\n    setTeams(teamsCopy);\n  };\n\n  let updateSettings = function (waitTime, numberOfWinners) {\n    setNumberOfWinners(numberOfWinners);\n    setWaitTime(waitTime);\n  };\n\n  if (!runLottery) {\n    return (\n      <div id=\"Everything\">\n        <h1>Draft Lottery 2020</h1>\n        <div id=\"menuButtons\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success\"\n            onClick={() => calculateResults()}\n          >\n            Run\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            onClick={() => setShowSettingsModal(true)}\n          >\n            Settings\n          </button>\n          <button className=\"btn btn-info\" onClick={() => setTeams(wffl)}>\n            Load WFFL Data\n          </button>\n        </div>\n        <table className=\"table table-sm table-hover table-striped table-bordered\">\n          <AllTeams teams={teams} editTeam={editTeam} swapTeams={swapTeams} />\n        </table>\n        <div id=\"addButton\">\n          <button\n            className=\"btn btn-success\"\n            onClick={() => setShowAddTeamModal(true)}\n          >\n            Add Team\n          </button>\n        </div>\n        <ReactModal\n          isOpen={showAddTeamModal}\n          contentLabel=\"Add Team\"\n          className=\"Modal\"\n          overlayClassName=\"Overlay\"\n        >\n          <AddTeam\n            closeModal={() => setShowAddTeamModal(false)}\n            addTeam={(team) => setTeams([...teams, team])}\n          />\n        </ReactModal>\n        <ReactModal\n          isOpen={showEditTeamModal}\n          contentLabel=\"Edit Team\"\n          className=\"Modal\"\n          overlayClassName=\"Overlay\"\n        >\n          <EditTeam\n            closeModal={() => setShowEditTeamModal(false)}\n            editTeam={updateTeam}\n            startingValues={teams[editTeamIndex]}\n          />\n        </ReactModal>\n        <ReactModal\n          isOpen={showSettingsModal}\n          contentLabel=\"Settings\"\n          className=\"Modal\"\n          overlayClassName=\"Overlay\"\n        >\n          <Settings\n            closeModal={() => setShowSettingsModal(false)}\n            waitTime={waitTime}\n            numberOfWinners={numberOfWinners}\n            updateSettings={updateSettings}\n          />\n        </ReactModal>\n      </div>\n    );\n  } else {\n    return (\n      <Results\n        expectedOrder={teams.reverse()}\n        actualOrder={results}\n        waitTime={waitTime}\n        pickedTeams={numberOfWinners}\n      ></Results>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}